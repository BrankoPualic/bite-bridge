// <auto-generated />
using System;
using BiteBridge.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiteBridge.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dietary Preferences"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vegetarian",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vegan",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Keto",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Pescatarian",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Halal",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 15,
                            Name = "Meal Times"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Breakfast",
                            ParentId = 15
                        },
                        new
                        {
                            Id = 17,
                            Name = "Lunch",
                            ParentId = 15
                        },
                        new
                        {
                            Id = 18,
                            Name = "Dinner",
                            ParentId = 15
                        },
                        new
                        {
                            Id = 25,
                            Name = "Cuisines"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Asian",
                            ParentId = 25
                        },
                        new
                        {
                            Id = 27,
                            Name = "Mexican",
                            ParentId = 25
                        },
                        new
                        {
                            Id = 29,
                            Name = "Mediterranean",
                            ParentId = 25
                        },
                        new
                        {
                            Id = 31,
                            Name = "French",
                            ParentId = 25
                        },
                        new
                        {
                            Id = 32,
                            Name = "American",
                            ParentId = 25
                        },
                        new
                        {
                            Id = 33,
                            Name = "Middle Eastern",
                            ParentId = 25
                        },
                        new
                        {
                            Id = 76,
                            Name = "Food Types"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Seafood",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 78,
                            Name = "Pasta",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 79,
                            Name = "Pizza",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 80,
                            Name = "Burgers",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 81,
                            Name = "Salads",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 82,
                            Name = "Soups",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 83,
                            Name = "Sandwiches",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 84,
                            Name = "Grilled",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 102,
                            Name = "Carnivore",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 86,
                            Name = "Chicken",
                            ParentId = 102
                        },
                        new
                        {
                            Id = 85,
                            Name = "Beef",
                            ParentId = 102
                        },
                        new
                        {
                            Id = 103,
                            Name = "Pork",
                            ParentId = 102
                        },
                        new
                        {
                            Id = 104,
                            Name = "Turkey",
                            ParentId = 102
                        },
                        new
                        {
                            Id = 105,
                            Name = "Lamb",
                            ParentId = 102
                        },
                        new
                        {
                            Id = 87,
                            Name = "Rice Dishes",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 88,
                            Name = "Noodles",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 89,
                            Name = "Sushi",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 97,
                            Name = "Comfort Food",
                            ParentId = 76
                        },
                        new
                        {
                            Id = 98,
                            Name = "Street Food",
                            ParentId = 76
                        });
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.ErrorLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("InnerException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogs", (string)null);
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.SigninLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SigninLogs");
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HomeNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficeNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FirstName", "MiddleName", "LastName");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("FirstName", "MiddleName", "LastName"), new[] { "DateOfBirth" });

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application_lu.SystemRole_lu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SystemRoles_lu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Name = "UserAdmin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Moderator"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Member"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chef"
                        });
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.Category", b =>
                {
                    b.HasOne("BiteBridge.Domain.Entities.Application.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.UserRole", b =>
                {
                    b.HasOne("BiteBridge.Domain.Entities.Application_lu.SystemRole_lu", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiteBridge.Domain.Entities.Application.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.Category", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application.User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("BiteBridge.Domain.Entities.Application_lu.SystemRole_lu", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
